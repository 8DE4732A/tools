name: CI
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm install

      - run: npm run build
      - run: npm run doc

      # - name: Create Linux App
      #   working-directory: electron/app
      #   run: npm run dist-linux

      - name: Create Tag
        id: create_tag
        uses: jaywcjlove/create-tag-action@v1.3.6
        with:
          package-path: ./website/package.json

      - name: get tag version
        id: tag_version
        uses: jaywcjlove/changelog-generator@v1.5.7

      - name: Deploy Website
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{steps.tag_version.outputs.tag}} ${{ github.event.head_commit.message }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build

      - name: Generate Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@v1.5.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filter-author: (jaywcjlove|小弟调调™|dependabot\[bot\]|Renovate Bot)
          filter: (^[\s]+?[R|r]elease)|(^[R|r]elease)

  docker: 
    if: needs.create_tag.outputs.successful
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm install
      - run: npm run build

      # Create Docker Image
      - name: Create docker-compliant static resources.
        run: npm run docker

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docs image
        run: docker image build -t tools .

      - name: Tags & Push image
        run: |
          echo "outputs.tag - ${{ needs.changelog.outputs.version }}"
          docker tag tools ${{ secrets.DOCKER_USER }}/tools:${{needs.changelog.outputs.version}}
          docker tag tools ${{ secrets.DOCKER_USER }}/tools:latest
          docker push ${{ secrets.DOCKER_USER }}/tools:${{needs.changelog.outputs.version}}
          docker push ${{ secrets.DOCKER_USER }}/tools:latest

      # Create Docker Image in Github
      - name: Login to GitHub registry
        run: echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build docker image
        run: docker build -t ghcr.io/jaywcjlove/tools:main .

      - name: Publish to GitHub registry
        run: docker push ghcr.io/jaywcjlove/tools:main

      - name: Tag docker image (beta) and publish to GitHub registry
        run: |
            echo "version: v${{ needs.changelog.outputs.version }}"
            docker tag ghcr.io/jaywcjlove/tools:main ghcr.io/jaywcjlove/tools:${{needs.changelog.outputs.version}}
            docker push ghcr.io/jaywcjlove/tools:${{needs.changelog.outputs.version}}


  build_windows: 
    needs: [build]
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install
        run: npm install --build-from-source

      - run: npm run hoist

      - run: npm run build
      - run: npm run electron
      - run: npm run build:app

      - uses: actions/upload-artifact@v3
        with:
          name: tools-windows
          path: |
            electron\app\dist\*.deb

  build_macos:
    needs: [build]
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm install
      - run: npm run hoist
      - run: npm run build
      - run: npm run electron
      - run: npm run build:app

      - uses: actions/upload-artifact@v3
        with:
          name: tools-macos
          path: |
            electron/app/dist/*.zip
            electron/app/dist/*.mac

  build_linux:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
      - run: npm run hoist
      - run: npm run build
      - run: npm run electron
      - run: npm run build:app

      - uses: actions/upload-artifact@v3
        with:
          name: tools-linux
          path: |
            electron/app/dist/*.deb
            electron/app/dist/*.rpm

  create_release:
    needs: [build, build_windows, build_macos, build_linux]
    if: needs.create_tag.outputs.successful
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ needs.create_tag.outputs.version }}
          tag: ${{ needs.create_tag.outputs.version }}
          body: |
            [![Docker Image Version (latest by date)](https://img.shields.io/docker/v/wcjiang/tools)](https://hub.docker.com/r/wcjiang/tools) [![Docker Image Size (latest by date)](https://img.shields.io/docker/image-size/wcjiang/tools)](https://hub.docker.com/r/wcjiang/tools) [![Docker Pulls](https://img.shields.io/docker/pulls/wcjiang/tools)](https://hub.docker.com/r/wcjiang/tools)
            
            Documentation ${{ needs.changelog.outputs.tag }}: https://raw.githack.com/jaywcjlove/tools/${{ needs.changelog.outputs.gh-pages-short-hash }}/index.html  
            
            Comparing Changes: ${{ needs.changelog.outputs.compareurl }}  

            ${{ needs.changelog.outputs.changelog }}

            ```bash
            docker pull wcjiang/tools:${{needs.changelog.outputs.version}}
            ```

            ```bash
            docker run --name tools --rm -d -p 9666:80 wcjiang/tools:${{needs.changelog.outputs.version}}
            # Or
            docker run --name tools -itd -p 9666:80 wcjiang/tools:${{needs.changelog.outputs.version}}
            ```

            Visit the following URL in your browser

            ```bash
            http://localhost:9666/
            ```

  roll_back:
    if: failure()
    needs: [create_release]
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        if: needs.create_tag.outputs.successful
        with:
          delete_release: true
          repo: jaywcjlove/tools
          tag_name: '${{ needs.create_tag.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
